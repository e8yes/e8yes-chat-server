/**
 * e8yes demo web server.
 *
 * <p>Copyright (C) 2020 Chifeng Wen {daviesx66@gmail.com}
 *
 * <p>This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * <p>You should have received a copy of the GNU General Public License along with this program. If
 * not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto3";

package e8;

// Specifies the amount of each type of capability the machine has.
message WeightedCapabilities {
    // All types of capability of concern.
    enum Type {
        INVALID_TYPE = 0;

        // General computation hardware.
        CPU = 1;

        // Main memory.
        RAM = 2;

        // Persistent (disk) storage.
        STORAGE = 3;

        // Coral accelerator.
        CORAL = 4;
    }

    message FixedPoint {
        // The 4 least significant digits represents the fraction of the value 
        // while the rest are used to represent the integer part. e.g. 12340001
        // represents the value 1234.0001.
        int64 integer_and_fraction = 1;
    }

    // The number of standardized general computation units the machine has.
    FixedPoint cpu = 1;

    // The number of gigabytes of main memory the machine has.
    FixedPoint ram = 2;

    // The number of gigabytes of disk storage the machine has.
    FixedPoint storage = 3;

    // The number of coral accelerators the machine has.
    FixedPoint coral = 4;
}

// Describes the basic information about a machine that the cluster monitor
// needs to know for placement, replication and recovery.
message Machine {
    // The machine's static IPv4/v6 address.
    string address = 1;

    // The machine's capability.
    WeightedCapabilities capabilities = 2;
}
